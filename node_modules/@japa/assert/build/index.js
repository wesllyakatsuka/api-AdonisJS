"use strict";
/*
 * @japa/assert
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.assert = exports.Assert = void 0;
const Assert_1 = require("./src/Assert");
Object.defineProperty(exports, "Assert", { enumerable: true, get: function () { return Assert_1.Assert; } });
__exportStar(require("./src/Contracts"), exports);
/**
 * Plugin for "@japa/runner"
 */
function assert(options) {
    if (options?.openApi) {
        Assert_1.Assert.registerApiSpecs(options.openApi.schemas, {
            exportCoverage: options.openApi.exportCoverage,
            reportCoverage: options.openApi.reportCoverage,
        });
    }
    return function (_, __, { TestContext, Test }) {
        TestContext.getter('assert', () => new Assert_1.Assert(), true);
        Test.dispose(function (test, hasError) {
            if (!hasError) {
                test.context.assert.assertions.validate();
            }
        });
    };
}
exports.assert = assert;
